{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harsh\\\\VSCodeProjects\\\\maze_game\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport { getNewGame, runSimulation, getMlSuggestion } from './utils/api';\nimport './App.css';\n\n// --- Color Constants ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  default: '#aaa',\n  source: '#ff4136',\n  // Red\n  target: '#0074d9',\n  // Blue\n  firewall: '#ff851b',\n  // Orange\n  ml_suggestion: '#2ecc40',\n  // Green\n  infected: '#b10dc9' // Purple\n};\n\n// --- New Home Screen Component ---\nfunction HomeScreen({\n  onStartGame\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/my-logo.png\",\n        alt: \"Logo\",\n        className: \"home-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Network Flow Defence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A \\\"Patient Zero\\\" (red) is trying to infect a \\\"Critical Patient\\\" (blue).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your job is to build firewalls on nodes to stop the infection before it reaches the target.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-large\",\n        onClick: onStartGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n// --- Main App Component ---\n_c = HomeScreen;\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState('HOME'); // 'HOME' | 'PLAYING'\n  const [level, setLevel] = useState(1);\n  const [totalScore, setTotalScore] = useState(0);\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [sourceNode, setSourceNode] = useState(null);\n  const [targetNode, setTargetNode] = useState(null);\n  const [selectedNodes, setSelectedNodes] = useState(new Set());\n  const [mlSuggestions, setMlSuggestions] = useState(new Set());\n  const [simulationResult, setSimulationResult] = useState(null);\n  const [gameMessage, setGameMessage] = useState('Loading...');\n  const [scoringResult, setScoringResult] = useState(null);\n  const [isSimulating, setIsSimulating] = useState(false);\n  const [infectedNodes, setInfectedNodes] = useState(new Set());\n  const fgRef = useRef();\n\n  // Function to load a new game (a new level)\n  const newGame = useCallback(() => {\n    setIsSimulating(false);\n    setSimulationResult(null);\n    setScoringResult(null);\n    setSelectedNodes(new Set());\n    setMlSuggestions(new Set());\n    setInfectedNodes(new Set());\n    setGameMessage('Loading new level...');\n    getNewGame().then(response => {\n      const {\n        graph,\n        source,\n        target\n      } = response.data;\n      graph.nodes.forEach(node => {\n        node.val = 8; // node size\n      });\n      setGraphData(graph);\n      setSourceNode(source);\n      setTargetNode(target);\n      setGameMessage('Level loaded. Place your firewalls.');\n    }).catch(err => {\n      console.error(err);\n      setGameMessage('Error loading game. Please try again.');\n    });\n  }, []);\n\n  // Function to start a brand new game from the home screen\n  const startGame = () => {\n    setLevel(1);\n    setTotalScore(0);\n    setGameState('PLAYING');\n    newGame();\n  };\n\n  // Function to return to the home screen\n  const goHome = () => {\n    setGameState('HOME');\n  };\n\n  // Handle clicking on a node\n  const handleNodeClick = useCallback(node => {\n    if (isSimulating || node.id === sourceNode || node.id === targetNode) {\n      return;\n    }\n    const newSelectedNodes = new Set(selectedNodes);\n    if (newSelectedNodes.has(node.id)) {\n      newSelectedNodes.delete(node.id);\n    } else {\n      newSelectedNodes.add(node.id);\n    }\n    setSelectedNodes(newSelectedNodes);\n  }, [selectedNodes, sourceNode, targetNode, isSimulating]);\n\n  // Get ML Suggestions\n  const fetchMlSuggestions = () => {\n    setGameMessage('Calculating ML suggestions...');\n    getMlSuggestion(graphData, sourceNode, targetNode, 5).then(response => {\n      setMlSuggestions(new Set(response.data.top_k_nodes));\n      setGameMessage('ML suggestions loaded.');\n    }).catch(err => {\n      console.error(err);\n      setGameMessage('Error getting ML suggestions.');\n    });\n  };\n\n  // Run the Simulation\n  const handleRunSimulation = () => {\n    setIsSimulating(true);\n    setGameMessage('Simulation running...');\n    setInfectedNodes(new Set([sourceNode]));\n    setMlSuggestions(new Set());\n    setSimulationResult(null);\n    setScoringResult(null);\n    runSimulation(graphData, sourceNode, targetNode, Array.from(selectedNodes)).then(response => {\n      const {\n        simulation,\n        scoring\n      } = response.data;\n      setSimulationResult(simulation);\n      setScoringResult(scoring);\n\n      // --- Animate the result ---\n      const {\n        infection_order\n      } = simulation;\n      if (infection_order.length <= 1) {\n        // No infection spread, end simulation immediately\n        handleSimulationEnd(scoring);\n        return;\n      }\n      infection_order.forEach((nodeId, index) => {\n        setTimeout(() => {\n          setInfectedNodes(prev => new Set(prev).add(nodeId));\n          if (index === infection_order.length - 1) {\n            // This was the last node, handle game over\n            handleSimulationEnd(scoring);\n          }\n        }, index * 200); // 200ms delay per step\n      });\n    }).catch(err => {\n      console.error(err);\n      setIsSimulating(false);\n      setGameMessage('Error running simulation.');\n    });\n  };\n\n  // --- New function to handle the end of a simulation ---\n  const handleSimulationEnd = scoring => {\n    if (scoring.score > 0) {\n      // SUCCESS!\n      setGameMessage('Success! Loading next level...');\n      setTotalScore(prevScore => prevScore + scoring.score);\n      setLevel(prevLevel => prevLevel + 1);\n\n      // Wait 2 seconds, then load the next level\n      setTimeout(() => {\n        newGame();\n      }, 2000);\n    } else {\n      // FAILURE\n      setGameMessage('Failure... Try this level again.');\n      // We don't advance the level. User can just click \"Run\" again\n      // or we can force them to click \"New Game\" to reset score.\n      // For now, just let them retry.\n      setIsSimulating(false);\n    }\n  };\n\n  // --- Node Coloring Logic ---\n  const getNodeColor = useCallback(node => {\n    if (infectedNodes.has(node.id)) {\n      return COLORS.infected;\n    }\n    if (node.id === sourceNode) {\n      return COLORS.source;\n    }\n    if (node.id === targetNode) {\n      return COLORS.target;\n    }\n    if (selectedNodes.has(node.id)) {\n      return COLORS.firewall;\n    }\n    if (mlSuggestions.has(node.id)) {\n      return COLORS.ml_suggestion;\n    }\n    return COLORS.default;\n  }, [infectedNodes, sourceNode, targetNode, selectedNodes, mlSuggestions]);\n\n  // --- Main Render ---\n\n  if (gameState === 'HOME') {\n    return /*#__PURE__*/_jsxDEV(HomeScreen, {\n      onStartGame: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/my-logo.png\",\n          alt: \"Logo\",\n          style: {\n            height: '40px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: goHome,\n          children: \"Main Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Level: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Total Score: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: totalScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n        ref: fgRef,\n        graphData: graphData,\n        nodeColor: getNodeColor,\n        linkColor: () => '#333',\n        linkWidth: 2,\n        onNodeClick: handleNodeClick,\n        nodeCanvasObject: (node, ctx, globalScale) => {\n          const label = node.id;\n          const fontSize = 12 / globalScale;\n          ctx.font = `${fontSize}px Sans-Serif`;\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n          const color = getNodeColor(node);\n          ctx.fillStyle = color;\n          ctx.beginPath();\n          ctx.arc(node.x, node.y, 6, 0, 2 * Math.PI, false);\n          ctx.fill();\n          ctx.fillStyle = '#fff';\n          ctx.fillText(label, node.x, node.y);\n        },\n        nodeCanvasObjectMode: () => 'after',\n        autoPauseRedraw: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 12\n        }, this), \" \", gameMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleRunSimulation,\n        disabled: isSimulating,\n        children: isSimulating ? 'Simulating...' : 'Run Simulation'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: fetchMlSuggestions,\n        disabled: isSimulating,\n        children: \"Get ML Suggestion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: COLORS.source\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), \" Patient Zero (Source)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: COLORS.target\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), \" Critical Patient (Target)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: COLORS.firewall\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), \" Your Firewall\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: COLORS.ml_suggestion\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), \" ML Suggestion\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: COLORS.infected\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), \" Infected Node\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: COLORS.default\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), \" Safe Node\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), scoringResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `results-panel ${scoringResult.score > 0 ? 'success' : 'failure'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Level Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Score: \", scoringResult.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: scoringResult.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pYgo7KIgvolDVPap8aS4qLjWOBo=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"HomeScreen\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","ForceGraph2D","getNewGame","runSimulation","getMlSuggestion","jsxDEV","_jsxDEV","COLORS","default","source","target","firewall","ml_suggestion","infected","HomeScreen","onStartGame","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","App","_s","gameState","setGameState","level","setLevel","totalScore","setTotalScore","graphData","setGraphData","nodes","links","sourceNode","setSourceNode","targetNode","setTargetNode","selectedNodes","setSelectedNodes","Set","mlSuggestions","setMlSuggestions","simulationResult","setSimulationResult","gameMessage","setGameMessage","scoringResult","setScoringResult","isSimulating","setIsSimulating","infectedNodes","setInfectedNodes","fgRef","newGame","then","response","graph","data","forEach","node","val","catch","err","console","error","startGame","goHome","handleNodeClick","id","newSelectedNodes","has","delete","add","fetchMlSuggestions","top_k_nodes","handleRunSimulation","Array","from","simulation","scoring","infection_order","length","handleSimulationEnd","nodeId","index","setTimeout","prev","score","prevScore","prevLevel","getNodeColor","style","height","ref","nodeColor","linkColor","linkWidth","onNodeClick","nodeCanvasObject","ctx","globalScale","label","fontSize","font","textAlign","textBaseline","color","fillStyle","beginPath","arc","x","y","Math","PI","fill","fillText","nodeCanvasObjectMode","autoPauseRedraw","disabled","backgroundColor","message","_c2","$RefreshReg$"],"sources":["C:/Users/Harsh/VSCodeProjects/maze_game/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport { getNewGame, runSimulation, getMlSuggestion } from './utils/api';\nimport './App.css';\n\n// --- Color Constants ---\nconst COLORS = {\n  default: '#aaa',\n  source: '#ff4136', // Red\n  target: '#0074d9', // Blue\n  firewall: '#ff851b', // Orange\n  ml_suggestion: '#2ecc40', // Green\n  infected: '#b10dc9', // Purple\n};\n\n// --- New Home Screen Component ---\nfunction HomeScreen({ onStartGame }) {\n  return (\n    <div className=\"home-screen\">\n      <div className=\"home-content\">\n        <img src=\"/my-logo.png\" alt=\"Logo\" className=\"home-logo\" />\n        <h1>Network Flow Defence</h1>\n        <p>A \"Patient Zero\" (red) is trying to infect a \"Critical Patient\" (blue).</p>\n        <p>Your job is to build firewalls on nodes to stop the infection before it reaches the target.</p>\n        <button className=\"btn btn-primary btn-large\" onClick={onStartGame}>\n          Start Game\n        </button>\n      </div>\n    </div>\n  );\n}\n\n// --- Main App Component ---\nfunction App() {\n  const [gameState, setGameState] = useState('HOME'); // 'HOME' | 'PLAYING'\n  const [level, setLevel] = useState(1);\n  const [totalScore, setTotalScore] = useState(0);\n\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\n  const [sourceNode, setSourceNode] = useState(null);\n  const [targetNode, setTargetNode] = useState(null);\n  const [selectedNodes, setSelectedNodes] = useState(new Set());\n  const [mlSuggestions, setMlSuggestions] = useState(new Set());\n  const [simulationResult, setSimulationResult] = useState(null);\n  const [gameMessage, setGameMessage] = useState('Loading...');\n  const [scoringResult, setScoringResult] = useState(null);\n  const [isSimulating, setIsSimulating] = useState(false);\n  const [infectedNodes, setInfectedNodes] = useState(new Set());\n\n  const fgRef = useRef();\n\n  // Function to load a new game (a new level)\n  const newGame = useCallback(() => {\n    setIsSimulating(false);\n    setSimulationResult(null);\n    setScoringResult(null);\n    setSelectedNodes(new Set());\n    setMlSuggestions(new Set());\n    setInfectedNodes(new Set());\n    setGameMessage('Loading new level...');\n\n    getNewGame()\n      .then((response) => {\n        const { graph, source, target } = response.data;\n        graph.nodes.forEach((node) => {\n          node.val = 8; // node size\n        });\n        setGraphData(graph);\n        setSourceNode(source);\n        setTargetNode(target);\n        setGameMessage('Level loaded. Place your firewalls.');\n      })\n      .catch((err) => {\n        console.error(err);\n        setGameMessage('Error loading game. Please try again.');\n      });\n  }, []);\n\n  // Function to start a brand new game from the home screen\n  const startGame = () => {\n    setLevel(1);\n    setTotalScore(0);\n    setGameState('PLAYING');\n    newGame();\n  };\n\n  // Function to return to the home screen\n  const goHome = () => {\n    setGameState('HOME');\n  };\n\n  // Handle clicking on a node\n  const handleNodeClick = useCallback(\n    (node) => {\n      if (isSimulating || node.id === sourceNode || node.id === targetNode) {\n        return;\n      }\n      const newSelectedNodes = new Set(selectedNodes);\n      if (newSelectedNodes.has(node.id)) {\n        newSelectedNodes.delete(node.id);\n      } else {\n        newSelectedNodes.add(node.id);\n      }\n      setSelectedNodes(newSelectedNodes);\n    },\n    [selectedNodes, sourceNode, targetNode, isSimulating]\n  );\n\n  // Get ML Suggestions\n  const fetchMlSuggestions = () => {\n    setGameMessage('Calculating ML suggestions...');\n    getMlSuggestion(graphData, sourceNode, targetNode, 5)\n      .then((response) => {\n        setMlSuggestions(new Set(response.data.top_k_nodes));\n        setGameMessage('ML suggestions loaded.');\n      })\n      .catch((err) => {\n        console.error(err);\n        setGameMessage('Error getting ML suggestions.');\n      });\n  };\n\n  // Run the Simulation\n  const handleRunSimulation = () => {\n    setIsSimulating(true);\n    setGameMessage('Simulation running...');\n    setInfectedNodes(new Set([sourceNode]));\n    setMlSuggestions(new Set());\n    setSimulationResult(null);\n    setScoringResult(null);\n\n    runSimulation(\n      graphData,\n      sourceNode,\n      targetNode,\n      Array.from(selectedNodes)\n    )\n      .then((response) => {\n        const { simulation, scoring } = response.data;\n        setSimulationResult(simulation);\n        setScoringResult(scoring);\n\n        // --- Animate the result ---\n        const { infection_order } = simulation;\n        if (infection_order.length <= 1) {\n          // No infection spread, end simulation immediately\n          handleSimulationEnd(scoring);\n          return;\n        }\n\n        infection_order.forEach((nodeId, index) => {\n          setTimeout(() => {\n            setInfectedNodes((prev) => new Set(prev).add(nodeId));\n            \n            if (index === infection_order.length - 1) {\n              // This was the last node, handle game over\n              handleSimulationEnd(scoring);\n            }\n          }, index * 200); // 200ms delay per step\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        setIsSimulating(false);\n        setGameMessage('Error running simulation.');\n      });\n  };\n\n  // --- New function to handle the end of a simulation ---\n  const handleSimulationEnd = (scoring) => {\n    if (scoring.score > 0) {\n      // SUCCESS!\n      setGameMessage('Success! Loading next level...');\n      setTotalScore((prevScore) => prevScore + scoring.score);\n      setLevel((prevLevel) => prevLevel + 1);\n      \n      // Wait 2 seconds, then load the next level\n      setTimeout(() => {\n        newGame();\n      }, 2000);\n\n    } else {\n      // FAILURE\n      setGameMessage('Failure... Try this level again.');\n      // We don't advance the level. User can just click \"Run\" again\n      // or we can force them to click \"New Game\" to reset score.\n      // For now, just let them retry.\n      setIsSimulating(false);\n    }\n  };\n\n\n  // --- Node Coloring Logic ---\n  const getNodeColor = useCallback(\n    (node) => {\n      if (infectedNodes.has(node.id)) {\n        return COLORS.infected;\n      }\n      if (node.id === sourceNode) {\n        return COLORS.source;\n      }\n      if (node.id === targetNode) {\n        return COLORS.target;\n      }\n      if (selectedNodes.has(node.id)) {\n        return COLORS.firewall;\n      }\n      if (mlSuggestions.has(node.id)) {\n        return COLORS.ml_suggestion;\n      }\n      return COLORS.default;\n    },\n    [infectedNodes, sourceNode, targetNode, selectedNodes, mlSuggestions]\n  );\n\n  // --- Main Render ---\n  \n  if (gameState === 'HOME') {\n    return <HomeScreen onStartGame={startGame} />;\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"header-left\">\n          <img src=\"/my-logo.png\" alt=\"Logo\" style={{ height: '40px' }} />\n          <button className=\"btn btn-secondary\" onClick={goHome}>\n            Main Menu\n          </button>\n        </div>\n        \n        <div className=\"score-display\">\n          <div>Level: <strong>{level}</strong></div>\n          <div>Total Score: <strong>{totalScore}</strong></div>\n        </div>\n      </header>\n\n      <div className=\"game-container\">\n        <ForceGraph2D\n          ref={fgRef}\n          graphData={graphData}\n          nodeColor={getNodeColor}\n          linkColor={() => '#333'}\n          linkWidth={2}\n          onNodeClick={handleNodeClick}\n          nodeCanvasObject={(node, ctx, globalScale) => {\n            const label = node.id;\n            const fontSize = 12 / globalScale;\n            ctx.font = `${fontSize}px Sans-Serif`;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            \n            const color = getNodeColor(node);\n            ctx.fillStyle = color;\n            \n            ctx.beginPath();\n            ctx.arc(node.x, node.y, 6, 0, 2 * Math.PI, false);\n            ctx.fill();\n\n            ctx.fillStyle = '#fff';\n            ctx.fillText(label, node.x, node.y);\n          }}\n          nodeCanvasObjectMode={() => 'after'}\n          autoPauseRedraw={false}\n        />\n      </div>\n\n      <aside className=\"sidebar\">\n        <h2>Controls</h2>\n        <p><strong>Status:</strong> {gameMessage}</p>\n        <button\n          className=\"btn btn-primary\"\n          onClick={handleRunSimulation}\n          disabled={isSimulating}\n        >\n          {isSimulating ? 'Simulating...' : 'Run Simulation'}\n        </button>\n        <button\n          className=\"btn btn-warning\"\n          onClick={fetchMlSuggestions}\n          disabled={isSimulating}\n        >\n          Get ML Suggestion\n        </button>\n\n        <hr />\n        <h2>Legend</h2>\n        <ul className=\"legend\">\n          <li><div className=\"legend-color\" style={{backgroundColor: COLORS.source}}></div> Patient Zero (Source)</li>\n          <li><div className=\"legend-color\" style={{backgroundColor: COLORS.target}}></div> Critical Patient (Target)</li>\n          <li><div className=\"legend-color\" style={{backgroundColor: COLORS.firewall}}></div> Your Firewall</li>\n          <li><div className=\"legend-color\" style={{backgroundColor: COLORS.ml_suggestion}}></div> ML Suggestion</li>\n          <li><div className=\"legend-color\" style={{backgroundColor: COLORS.infected}}></div> Infected Node</li>\n          <li><div className=\"legend-color\" style={{backgroundColor: COLORS.default}}></div> Safe Node</li>\n        </ul>\n\n        {scoringResult && (\n          <div className={`results-panel ${scoringResult.score > 0 ? 'success' : 'failure'}`}>\n            <h3>Level Complete!</h3>\n            <p><strong>Score: {scoringResult.score}</strong></p>\n            <p>{scoringResult.message}</p>\n          </div>\n        )}\n      </aside>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}